#!/bin/bash
BIN_DIR=`readlink -f ../bin`
export PATH+=":${BIN_DIR}"
base_url="http://ogres-crypt.com/SMF"
[ -d SMF ] && rm -rf SMF
# -k: convert to relative links
wget -o fetch.log -m -nH -np -k http://ogres-crypt.com/SMF
if ! [ -d SMF ]; then
  echo "Download of SMF directory failed."
  exit 2
fi
cd SMF
# Get icons which are actually in ../icons.  Ignore .html indexes.
wget -a ../fetch.log -m -nH -np -A ico http://ogres-crypt.com/icons/
# Just images/under_construction.jpg.  We don't need the other ones.
mkdir images
wget -a ../fetch.log -nH -np \
   http://ogres-crypt.com/images/under_construction.jpg \
   -O images/under_construction.jpg
if ! [ -e icons/folder.png ]; then
  # Folder 32x32px:
  # http://files.softicons.com/download/internet-icons/stuttgart-icons-by-pc.de/png/32/folder.png
  # Substitute for:
  # http://us.geo1.yimg.com/pic.geocities.com/img/filemgr/folder.gif
  wget -a ../fetch.log \
'http://files.softicons.com/download/internet-icons/stuttgart-icons-by-pc.de/png/32/folder.png' \
  -O icons/folder.png
  # Re-size to 16x16, transparent background.
  # convert -resize 16x16 -fill none -fuzz 20% \
  #  -draw 'matte 0,0 floodfill' \
  # icons/folder.png icons/folder.png
fi
if ! [ -e icons/fopen.png ]; then
  # http://files.softicons.com/download/toolbar-icons/childish-icons-by-double-j-design/png/32x32/childish_Folder.png
  # Substitute fore:
  # http://us.geo1.yimg.com/pic.geocities.com/img/filemgr/fopen.gif
  wget -a ../fetch.log \
  'http://files.softicons.com/download/toolbar-icons/childish-icons-by-double-j-design/png/32x32/childish_Folder.png' \
  -O icons/fopen.png
  # Re-size to 16x16, transparent background.
  # convert -resize 16x16 -fill none -fuzz 20% \
  # -draw 'matte 0,0 floodfill' \
  # icons/fopen.png icons/fopen.png
fi
if [ -f Documentation ]; then
  mv Documentation Documentation.html
  mkdir Documentation
  mv Documentation.html Documentation/index.html
  cd Documentation
  sed -i -e 's/<a href="viewer.php?name=\([^"]*\.html\)">/<a href="\1">/
  s=http://.*yimg.com/.*/folder.gif=/icons/folder.png=
  s=http://.*yimg.com/.*/fopen.gif=/icons/fopen.png=
  # Not sure about this.
  /href="..\/SMF"/ s=\.\./SMF=../=
  # icons are one level up.
  s=/icons/=..&=' index.html
  # Use 'sed' to extra the HTML references fetch vi -i-.
  # There two referecnes (alpha and topic) to a URL
  # so use 'sort -u' to make them unique.
  sed -n -e \
    '/<a href="[^"]*\.html"/ {s/^.*<a href="//;s/">.*$//;p}' \
    index.html | sort -u \
    | wget -a ../../fetch.log \
      -v -np -nd -nH -i- --base="${base_url}/Documentation/"
  while read f; do
    sed -i -e \
      's|http://finance.groups.yahoo.com/.*/Documentation/[0-9]*\.[0-9]* - \([^(]*\)()\.html|\1.html|
       s|http://finance.groups.yahoo.com/group/smf_addin/files/.*Examples/|../Templates/|' $f
  done < <(grep -rl 'http://finance.groups.yahoo.com/group/smf_addin/files' .)
  sed -i -e 's|href="\([^/.][^-]*\)\.html"|href="\1-Function.html"|g' \
    Change-Log.html
  # Remove refs to missing target.
  sed -i -e 's| A template is.*here</a>.||
  s|<a[^<]*\(Market Statistics\)</a>|\1|
  s|  A sample is .*smfUpdateDownloadTable.*here</a>.||' \
    Change-Log.html
  # Remove refs to missing target.
  sed -i -e '\|<li>See the.*SMF-Template-SMFTech-Beta.xls.|d' \
    smfTech-Function.html
  while read f; do
    sed -i \
    -e 's|<!-- text below generated by server. PLEASE REMOVE -->.*||g' "$f"
  done < <(grep -ilr 'text below generated by server' .)
  find . -maxdepth 1 -name 'view*' -delete
  cd ..
fi
if [ "`find . -maxdepth 1 -name 'RCH_Stock_Market_Functions*.zip' | \
         wc -1`" -ne 1 ]; then
  echo "can't find RCH_Stock_Market_Functions zip file"
  exit 2
fi
mkdir 'SMF Add-In' && cd "$_"
unzip ../RCH_Stock_Market_Functions*.zip
# The zip file is more up-to-date than the Elements directory.
rsync -uv RCHGetElementNumber-Element-Definitions.xls \
      smf-elements-*.txt ../Elements/
cd ..
# Create the one page SMF-functions HTML file
(cd Documentation; gen-smf-func-page *.html > \
    '../SMF Add-In/SMF-functions.html')
echo "The add in is now located in:"
echo "source/SMF/SMF Add-In/RCH_Stock_Market_Functions.xla"

# vim: set nospell tw=0:
