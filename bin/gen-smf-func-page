#!/usr/bin/perl
use strict;
use warnings;
use File::Slurp;
# Page file names are passed as args.
my @pages = @ARGV;
# Remove index.html and Change-Log.html from the list.
@pages = grep {!/^(?:index|Change-Log)\.html$/} @pages;
# Sort alphabetically.
@pages = sort @pages;
print <<EOF;
<html lang="en">
<head>
<title>SMF Functions</title>
<meta http-equiv="Content-Type" content="text/html">
<meta name="description" content="SMF Functions">
<meta name="generator" content="by hand">
<link title="Top" rel="top" href="#Top">
<meta http-equiv="Content-Style-Type" content="text/css">
<style type="text/css">
<!--
  pre.display { font-family:inherit }
  pre.format  { font-family:inherit }
  pre.smalldisplay { font-family:inherit; font-size:smaller }
  pre.smallformat  { font-family:inherit; font-size:smaller }
  pre.smallexample { font-size:smaller }
  pre.smalllisp    { font-size:smaller }
  span.sc    { font-variant:small-caps }
  span.roman { font-family:serif; font-weight:normal; } 
  span.sansserif { font-family:sans-serif; font-weight:normal; } 
-->
</style>
</head>
<body>
<h1 class="settitle">SMF Functions</h1>
<div class="contents">
<h2>Table of Contents</h2>
<a name="#TOC"></a>
<ul>
EOF
my @funcs = ();
for my $p (@pages) {
  if ($p !~ /\.html$/) {
    warn "not an HTML file: $p\n";
    next;
  }
  if (! -e $p) {
    warn "not found: $p\n";
    next;
  }
  (my $func_name = $p) =~ s/\.html$//;
  push @funcs, $func_name;
}
for my $func_name (@funcs) {
  print "<li><a href=\"#${func_name}\">$func_name</a>\n";
}
print <<EOF;
</li></ul>
</div>
EOF
for my $p (@pages) {
  (my $func_name = $p) =~ s/\.html$//;
  print <<EOF;

<div class="node">
<a name="${func_name}"></a>
<p><hr>
EOF
  open (my $html_file, '<', $p)
    or die "can't read: $p\n";
  my $empty_line_seen;
  while (<$html_file>) {
    chomp;
    # delete trailing <CR><LF>.
    s/\r$//;
    # Remove back-to-back empty lines.
    next if ($empty_line_seen && /^\s*$/);
    $empty_line_seen = /^\s*$/;
    # Delete Yahoo's counter code.
    next if /text below generated by server. PLEASE REMOVE/;
    # Delete lines with multiple <br>'s.
    next if /^<br>(?:<br>)+$/;
    s/Documentation for ([^(]+)\(\) function/$1/;
    s{<br><li>...more to come}{}g;
    s{<br><li>...coming later...}{}g;
    print;
  }
  close $html_file;
}
print <<EOF;

</body>
</html>
EOF
